version: '3.5'

networks:
  backend:
    driver: bridge

services:
  mysql:
    hostname: mysql
    build:
      context: mysql
      args:
        - MYSQL_VERSION=latest
    environment:
      - MYSQL_DATABASE=default
      - MYSQL_USER=default
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=root
      - TZ=UTC
    volumes:
      - ./mysql/data/:/var/lib/mysql
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
    networks:
      - backend
  elasticsearch:
    build:
      context: elasticsearch/
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - backend
  logstash:
    build:
      context: logstash/
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
      - ./mysql/data/:/var/data
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - backend
    depends_on:
      - elasticsearch
  kibana:
    build:
      context: kibana/
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - backend
    depends_on:
      - elasticsearch
  mongo:
    build: ./mongo
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
      - ./data/mongo_config:/data/configdb
    networks:
      - backend
  graylog:
    build: ./graylog
    environment:
      - GRAYLOG_PASSWORD_SECRET=somesupersecretpassword
      - GRAYLOG_ROOT_PASSWORD_SHA2=b1cb6e31e172577918c9e7806c572b5ed8477d3f57aa737bee4b5b1db3696f09
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
    links:
      - elasticsearch
      - mongo
    depends_on:
      - elasticsearch
      - mongo
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog TCP
      - 514:514
      # Syslog UDP
      - 514:514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp
    user: graylog
    volumes:
      - ./data/graylog:/usr/share/graylog/data
      - ./graylog/config:/usr/share/graylog/data/config
    networks:
      - backend


volumes:
  elasticsearch:
